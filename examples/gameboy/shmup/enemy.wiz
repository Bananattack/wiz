package enemy do
    func init do
        hl = ram.enemy.data
        a = 0x00
        bc = ram.enemy.SIZE * ram.enemy.MAX
        call memset
    end

    func spawn do
    //  [t0..tSIZE] = new enemy data
        hl = ram.enemy.data
        de = ram.enemy.SIZE
        c = ram.enemy.MAX
        loop
            a = [hl]
            if compare a is zero then
                bc = ram.t0
                loop
                    [hl++] = [bc] via a
                    bc++
                    e--
                until zero end
                return
            else
                hl = hl + de
            end
            c--
        until zero end
    end

    func refresh do
        hl = ram.enemy.data
        de = ram.enemy.SIZE
        c = ram.enemy.MAX
        loop
            a = [hl]
            if compare a is not zero then
                push hl
                compare a to 1; call refresh_ghost when ==
                hl = pop
            end
            hl = hl + de
            c--
        until zero end
    end

    func refresh_ghost do
        push bc
        push de
        push hl
        hl++
        hl++
        e = [hl++] via a
        d = [hl++] via a

        push de
        b = e
        c = 8
        //d = d
        e = 8
        hl = ram.bullet.data
        call bullet.collide
        if compare a is not zero then
            de = pop

            hl = pop
            hl++
            [hl]--
            if is zero then
                hl--
                [hl] = 0
            end

            de = pop
            bc = pop
            return
        else
            de = pop
        end

        // Draw!
        push hl
        call video.oam_open
        [hl++] = d via a
        [hl++] = e via a
        [hl++] = 0x03 via a
        [hl++] = 0x00 via a

        [hl++] = d + 8 via a
        [hl++] = e via a
        [hl++] = 0x13 via a
        [hl++] = 0x00 via a
        call video.oam_close
        hl = pop

        hl = pop
        push hl

        bc = ram.enemy.GHOST_SHOOT
        hl = hl + bc
        a = [hl]
        if compare a is zero then
            [hl] = 60 via a
            push hl
            hl = ram.t0
            [hl++] = 80 via a
            [hl++] = 0 via a
            [hl++] = e via a
            [hl++] = 1 via a
            [hl++] = d + 16 via a
            [hl++] = 2 via a
            hl = ram.bullet.data2
            call bullet.spawn
            hl = pop
        else
            [hl]--
        end

        hl = pop
        push hl

        de = ram.enemy.GHOST_TIMER
        hl = hl + de
        a = [hl]
        if compare a is zero then
            [hl++] = 3 via a
            
            a = [hl]
            if compare a is zero then
                hl = pop
                push hl

                de = ram.enemy.Y
                hl = hl + de
                [hl] = [hl] + 1 via a

                if compare a to 124 is >= then
                    hl = pop
                    push hl

                    de = ram.enemy.GHOST_TIMER
                    hl = hl + de
                    [hl++] = 30 via a
                    [hl]++
                end
            else
                hl = pop
                push hl

                de = ram.enemy.Y
                hl = hl + de
                [hl] = [hl] - 1 via a

                if compare a to 28 is < then
                    hl = pop
                    push hl

                    de = ram.enemy.GHOST_TIMER
                    hl = hl + de
                    [hl++] = 30 via a
                    [hl]--
                end
            end
        else
            [hl]--
        end

        hl = pop
        de = pop
        bc = pop

    end
end