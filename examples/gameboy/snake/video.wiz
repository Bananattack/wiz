package video do
    func init do
        [video.request.redraw] = 0 via a
    end

    func wait do
        loop
            a = [gb.lcd.stat] & gb.lcd.STAT_MODE_MASK
            compare a to gb.lcd.STAT_MODE_VBLANK
        until == end
    end

    func disable do
        call video.wait
        [gb.lcd.ctrl] = 0 via a
    end

    func flush do
        hl = video.request.redraw
        [hl]++
        loop
            sleep
            a = [hl]
            compare a
        until zero end
    end

    func acknowledge do
        a = [video.request.redraw]
        compare a
        if is ~zero then
            a = [video.request.move_snake]
            compare a
            if is ~zero then
                l = [player.tail] << 1 + <:player.parts via a
                h = >:player.parts +# 0 via a
                // hl = [hl]
                a = [hl++]
                h = [hl]
                l = a
                // Drop trail.
                [hl] = 0x1

                l = [player.head] << 1 + <:player.parts via a
                h = >:player.parts +# 0 via a
                // hl = [hl]
                a = [hl++]
                h = [hl]
                l = a
                // Check the tile under the head.
                a = [hl]
                if compare a is zero then
                    call video.disable
                else
                    // Reposition head.
                    [hl] = 0x0
                end
                hl = video.request.move_snake
                [hl]--
            end

            hl = video.request.redraw
            [hl]--
        end
    end
end