package boot do
    let user_draw = draw
    let user_stat = stat
    let user_timer = timer
    let user_serial = serial
    let user_joypad = joypad
    let user_main = main

    in main, 0x0000: do
        byte * 64: 0xC9

        def draw: do
            push af
            push bc
            push de
            push hl
            goto! user_draw
            nop
        end

        def stat: do
            push af
            push bc
            push de
            push hl
            goto! user_stat
            nop
        end

        def timer: do
            push af
            push bc
            push de
            push hl
            goto! user_timer
            nop
        end

        def serial: do
            push af
            push bc
            push de
            push hl
            goto! user_serial
            nop
        end

        def joypad: do
            push af
            push bc
            push de
            push hl
            goto! user_joypad
            nop
        end
    end
    in main, 0x0100: do
        def main: do
            goto! user_main
            nop
        end

        def logo: byte * 48:
            0xCE, 0xED, 0x66, 0x66, 0xCC, 0x0D, 0x00, 0x0B, 0x03, 0x73, 0x00, 0x83, 0x00, 0x0C, 0x00, 0x0D,
            0x00, 0x08, 0x11, 0x1F, 0x88, 0x89, 0x00, 0x0E, 0xDC, 0xCC, 0x6E, 0xE6, 0xDD, 0xDD, 0xD9, 0x99,
            0xBB, 0xBB, 0x67, 0x63, 0x6E, 0x0E, 0xEC, 0xCC, 0xDD, 0xDC, 0x99, 0x9F, 0xBB, 0xB9, 0x33, 0x3E
        def title: byte * 11: "DUNGEON", 0
        def manufacturer: byte * 4: "BOT", 0
        def gbc: byte * 1: gb.boot.GBC_UNSUPPORTED
        def licensee: byte * 2: "OK"
        def sgb: byte * 1: gb.boot.SGB_UNSUPPORTED
        def cart: byte * 1: gb.boot.CART_ROM
        def rom: byte * 1: gb.boot.ROM_32K
        def ram: byte * 1: gb.boot.RAM_8K
        def destination: byte * 1: gb.boot.DEST_INTERNATIONAL
        def old_licensee: byte * 1: 0x33
        def version: byte * 1: 0x00
        def header_checksum: byte * 1: 0xFF
        def global_checksum: word * 1: 0xFACE
    end
end